#+HTML_HEAD: <link href="../styles/org.css" rel="stylesheet">
#+OPTIONS: num:nil html-postamble:nil
#+TITLE: A Brief Introduction To Literate Programming With Geometrical Examples

* What is literate programming?

Literate programming sounds fancy, but it's really just an explanation of a
program along with the source code for the program. Some of the fancier tools
for literate programming allow you to run the source code right then and there.
They also let you manipulate the source code. We'll see this fanciness when we
look at Google Colab later.

** A Simple Example

The following is simple C++ program that prints the number of edges of a cube.
It uses [[https://en.wikipedia.org/wiki/Euler_characteristic#Polyhedra][Euler's polyhedron formula]] \( V - E + F = 2. \) The \( V \) denotes the
number of vertices, the \( E \) denotes the number of edges, and the \( F \)
denotes the number of faces of a convex polyhedron.

#+CAPTION: An explanation of vertices, edges, and faces taken from Wikipedia.
#+NAME: Explanation Of Vertices, Edges, and Faces
[[file:../images/vertex-edge-face.png]]

#+BEGIN_SRC cpp
#include <iostream>

int getNumberOfEdges(int vertices, int faces) {
    return vertices + faces - 2;
}

int main() {
    int edgesOfCube = getNumberOfEdges(6, 8);
    std::cout << edgesOfCube << std::endl;
    return 0;
}
#+END_SRC

#+RESULTS:
: 12

** History of Literate Programming

According to Wikipedia, literate programming was "introduced" by [[https://en.wikipedia.org/wiki/Donald_Knuth][Donald Knuth]].

#+CAPTION: A picture of Donald Knuth taken from Wikipedia. Licensed under CC BY-SA 2.5.
#+NAME: Donald Knuth
[[file:../images/donald-knuth.jpg]]

Knuth is one of the most famous computer scientists in the world. He made \(
\TeX \) and invented big O notation. He literally wrote the book on literate
programming!

#+CAPTION: A picture of Knuth's book on literate programming.
#+NAME: Literate Programming Book
[[file:../images/literate-programming-book.jpg]]

** Why should I care?

Literate programming is often used in academia for reproducible research. You
can explain what your program does and your colleagues can test the program for
themselves. It's also very useful for creating tutorials.

** Are there any other ways that literate programming could be used?

Yes! I think it should be used in teaching. A creative teacher could use
literate programming to teach just about any subject. If properly introduced,
programming is very conducive to experimentation and play which are, in my
opinion, crucial elements of learning.

Teaching programming can be especially useful for teaching and illustrating
mathematical concepts. Indeed, a computer is basically a mathematical sandbox.

* Two Examples Of Literate Programming

** Make A Spinning Cube Using Three.js

OK, that first example was pretty boring. Thanks to the wonderful world of
JavaScript libraries, we have a more interesting example.

To make a spinning cube using the Three.js JavaScript library, we first make a
DOM element where the spinning cube will live and we include the Three.js
library.

#+BEGIN_SRC html
<div id="cubeCanvas" class="center-perfect"></div>
<script src="https://threejs.org/build/three.js"></script>
#+END_SRC

We then use the Three.js library to create a cute little spinning cube.

#+BEGIN_SRC js
// Create scene and camera.
const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

// Create the renderer and set its size.
const renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth / 2, window.innerHeight / 2 );

// Create our cube and add it to the scene.
const geometry = new THREE.BoxGeometry( 1, 1, 1 );
const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
const cube = new THREE.Mesh( geometry, material );
scene.add( cube );

// Set the camera's position.
camera.position.z = 5;

// Animate the cube.
const animate = () => {
    requestAnimationFrame( animate );
    cube.rotation.x += 0.01;
    cube.rotation.y += 0.01;
    renderer.render( scene, camera );
};

// Get the cube's canvas, add the renderer to it, and animate the cube.
window.addEventListener('DOMContentLoaded', () => {
    const cubeCanvas = document.getElementById('cubeCanvas');
    cubeCanvas.appendChild( renderer.domElement );
    animate();
});
#+END_SRC

Look! A green spinning cube!

#+BEGIN_EXPORT html
<div id="cubeCanvas" class="center-perfect"></div>
<script src="https://threejs.org/build/three.js"></script>
<script>
// Create scene and camera.
const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

// Create the renderer and set its size.
const renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth / 2, window.innerHeight / 2 );
//document.body.appendChild( renderer.domElement );

// Create our cube and add it to the scene.
const geometry = new THREE.BoxGeometry( 1, 1, 1 );
const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
const cube = new THREE.Mesh( geometry, material );
scene.add( cube );

// Set the camera's position.
camera.position.z = 5;

// Animate the cube.
const animate = () => {
    requestAnimationFrame( animate );
    cube.rotation.x += 0.01;
    cube.rotation.y += 0.01;
    renderer.render( scene, camera );
};

window.addEventListener('DOMContentLoaded', () => {
    const cubeCanvas = document.getElementById('cubeCanvas');
    cubeCanvas.appendChild( renderer.domElement );
    animate();
});
</script>
#+END_EXPORT

** Google Colab

Google Colab is a popular literate programming tool for Python. Python is a very
popular programming language for data science, machine learning, and scientific
computing.

[[https://colab.research.google.com/drive/1YUYT90gJIZ09V0YqueZnsBj2yGdYIXp0?usp=sharing][Let's check it out!]]

* Other Tools For Literate Programming

** Honorable Mentions

+ [[https://jupyter.org/][Jupyter Notebook]]
+ [[https://rmarkdown.rstudio.com/][R Markdown]]
+ [[https://www.wolfram.com/notebooks/][Wolfram Notebooks]]

** How did you make this webpage?

I made it with [[https://orgmode.org/][Emacs Org-mode]].

#+BEGIN_EXPORT html
<hr>
<a class="center-perfect" href="https://liammulhall.com">Back To Liam's Homepage</a>
#+END_EXPORT
